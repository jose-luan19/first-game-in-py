#include <stdio.h>
#include <stdlib.h>

int cont = 0;

typedef struct box {
     int conteudoAntes;
     int conteudoDepois;
     struct box *prox;
     int tamanho;
     };
     struct box *primeiro, *ultimo;

     void vazia(){
         struct box *aux;
         aux = (struct box *) malloc(sizeof(struct box));
         primeiro = aux;
         ultimo = primeiro;
     }

     int insere_final(int x){
        struct box *aux;
        aux = (struct box *) malloc(sizeof(struct box));
        aux->conteudoAntes = x;
        aux->conteudoDepois = x;
        ultimo->prox = aux;
        ultimo = ultimo->prox;
        aux->prox = NULL;
        aux->tamanho = aux->tamanho+1;
     }
     void remover(int x){
       struct box *aux;
       struct box *sentinela;
       int i;
       for(i=0;i<x-1;i++){
            aux = primeiro->prox;
            sentinela = primeiro;
            sentinela->prox = aux->prox;
            free(aux);
        }
    }
    int ordernar(int x){
        struct box *aux;
        struct box *sentinela;
        sentinela = primeiro->prox;
        aux = primeiro;
        int temp, i;
        for(i=0;i<x;i++){
            if (sentinela->conteudoDepois > aux->conteudoDepois) {
                temp = sentinela->conteudoDepois;
                sentinela->conteudoDepois = aux->conteudoDepois;
                aux->conteudoDepois = temp;
            }
        }
    }
    void imprime(){
        struct box *aux;
        aux = primeiro->prox;
        while(aux!= NULL){
            printf("Antes:%i\nDepois:%i\n", aux->conteudoAntes, aux->conteudoDepois);
            aux = aux->prox;
        }
    }

    int comparar(){
       struct box *aux;
       aux = primeiro->prox;
       while(aux!=NULL){
            if(aux->conteudoAntes == aux->conteudoDepois){
                cont++;
                aux = aux->prox;

            }
       }
    }

int main(){
    vazia();
    int vetor[1001];
	int N, M, i, j;
	scanf("%i", &N);
	for(i=0;i<N;i++){
		scanf("%i",&M);
		for(j=0;j<M;j++){
			scanf("%i",&vetor[j]);
			insere_final(vetor[j]);
		}
		/*for(k=0;k<M;k++){
			insere_final(vetor[k]);
		}*/
		ordernar(M);
		comparar();
		vazia();
		printf("%i\n", cont);
        cont = 0;
		//imprime();
	}

    return 0;
}
